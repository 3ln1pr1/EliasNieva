{"name":"Bashblog","tagline":"A Bash script that handles blog posting","body":"bashblog\r\n========\r\n\r\nA single Bash script to create blogs. \r\n\r\nI created it because I wanted a very, very simple way to post entries to a blog by using a public folder on my server, without any special requirements and dependencies. Works on GNU/Linux, OSX and BSD.\r\n\r\n*How simple? Just type `./bb.sh post` and start writing your blogpost.*\r\n\r\nYou can see it live here: [read the initial blog post](https://web.archive.org/web/20130520204024/http://mmb.pcb.ub.es/~carlesfe/blog/creating-a-simple-blog-system-with-a-500-line-bash-script.html). That page was 100% generated using bashblog, no additional tweaking.\r\n\r\n[![demo](https://raw.githubusercontent.com/cfenollosa/bashblog/gh-pages/images/demo_thumb.png)](https://raw.githubusercontent.com/cfenollosa/bashblog/gh-pages/images/demo.png)\r\n\r\n\r\nUsage\r\n-----\r\n\r\nDownload the code and copy bb.sh into a public folder (for example, `$HOME/public_html/blog`) and run\r\n\r\n    ./bb.sh\r\n\r\nThis will show the available commands. If the file is not executable, type `chmod +x bb.sh` and retry.\r\n\r\n**Before creating your first post, you may want to configure the blog settings (title, author, etc).\r\nRead the Configuration section below for more information**\r\n\r\nTo create your first post, just run:\r\n\r\n    ./bb.sh post\r\n    \r\nIt will try to use Markdown, if installed. To force HTML:\r\n\r\n    ./bb.sh post -html\r\n    \r\nThe script will handle the rest.\r\n\r\nWhen you're done, access the public URL for that folder  (e.g. `http://server.com/~username/blog`) \r\nand you should see the index file and a new page for that post!\r\n\r\n\r\nFeatures\r\n--------\r\n\r\n- No installation required. Download `bb.sh` and start blogging.\r\n- Ultra simple usage: Just type a post with your favorite editor and the script does the rest. No templating.\r\n- All content is static. You only need shell access to a machine with a public web folder.\r\n  *Tip: advanced users could mount a remote public folder via `ftpfs` and run this script locally*\r\n- Allows drafts, includes a simple but clean stylesheet, generates the RSS file automatically.\r\n- Support for tags/categories\r\n- Support for Markdown, Disqus comments, Twitter, Feedburner, Google Analytics.\r\n- GNU/Linux, BSD and OSX compatible out of the box (no need for GNU `coreutils` on a Mac)\r\n- The project is still maintained as of 2015. Bugs are fixed, and new features are considered (see \"Contributing\")\r\n- Everything stored in a single <1k lines bash script, how cool is that?! ;) \r\n\r\n\r\nConfiguration\r\n-------------\r\n\r\nConfiguration is not required for a test drive, but if you plan on running your blog with bashblog, you will\r\nwant to change the default titles, author names, etc, to match your own.\r\n\r\nThere are two ways to configure the blog strings:\r\n\r\n- Edit `bb.sh` and modify the variables in the `global_variables()` function\r\n- Create a `.config` file with your configuration values -- useful if you don't want to touch the script and be able to update it regularly with git\r\n\r\nThe software will load the values in the script first, then overwrite them with the values in the `.config` file.\r\nThis means that you don't need to define all variables in the config file, only those which you need to override\r\nfrom the defaults.\r\n\r\nThe format of the `.config` file is just one `variablename=\"value\"` per line, just like in the `global_variables()`\r\nfunction. **Please remember:** quote the values, do not declare a variable with the dollar sign, do not use \r\nspaces around the equal sign.\r\n\r\nbashblog uses the `$EDITOR` environment value to open the text editor.\r\n\r\n\r\nDetailed features\r\n-----------------\r\n\r\n- A simple but nice and readable design, with nothing but the blog posts\r\n- **NEW on 2.0** Markdown support via a third-party library.  \r\n  The easiest method is to download\r\n  Gruber's [Markdown.pl](http://daringfireball.net/projects/markdown/)\r\n- Post preview\r\n- Save posts as drafts and resume editing later\r\n- HTML page for each post, using its title as the URL\r\n- Configurable number of posts on the front page\r\n- Automatic generation of an RSS file, feedburner support\r\n- Additional page containing an index of all posts\r\n- Automatically generates pages for each tag\r\n- Rebuild all files while keeping the original data\r\n- Comments delegated to Twitter, with additional Disqus support\r\n- An option for cookieless Twitter sharing, to comply with the \r\n[EU cookie law](https://github.com/cfenollosa/eu-cookie-law)\r\n- Google Analytics code support\r\n- Contains its own CSS so that everything is reasonably styled by default\r\n- Headers, footers, and in general everything that a well-structured html file needs\r\n- Support to add extra content on top of every page (e.g. banners, images, etc)\r\n- xhtml validation, CSS validation, RSS validation by the w3c\r\n- Automatic backup of the site every time you post (stored as `.backup.tar.gz`)\r\n\r\nRead the Changelog section for more updates or [check out the news on my blog](http://cfenollosa.com/blog/tag_bashblog.html)\r\n\r\n\r\nContributing\r\n------------\r\n\r\nBashblog started at 500 SLOC and it now has hit the 1000 SLOC barrier. \r\nIf we want to keep the code minimal and understandable, we need to make the difficult effort to restrain ourselves \r\nfrom adding too many features.\r\n\r\nAll bugfixes are welcome, but brand new features need to be strongly justified to get into the main tree. \r\nEvery new request will be honestly and civilly discussed on the comments. \r\nAs a guideline, pull requests should:\r\n\r\n- Fix a use case for some people (e.g. internationalization)\r\n- Add a use case which is arguably very common (e.g. disqus integration for comments)\r\n- Be very small when possible (a couple lines of code)\r\n- Don't require a significant rewrite of the code (Don't break `create_html_file()` or `write_entry()`, etc)\r\n- It must work on Linux, BSD and Mac. Beware of using GNU coreutils with non-POSIX flags (i.e. `date` or `grep`)\r\n- Follow the UNIX philosophy: do one thing and do it well, rely on third party software for external features, etc\r\n- **Always** keep backwards compatibility when using the default configuration\r\n\r\n\r\nChangelog\r\n---------\r\n\r\n- 2.4      Added Twitter summaries metadata for posts (#36)\r\n- 2.3.3    Removed big comment header.\r\n           Added option to display tags for cut articles on index pages (#61)\r\n           Cleaned up \"all posts\" page (#57)\r\n- 2.3.2    Option to use topsy instead of twitter for references\r\n- 2.3.1    Cookieless Twitter option\r\n- 2.3      Intelligent tag rebuilding and Markdown by default\r\n- 2.2      Flexible post title -> filename conversion\r\n- 2.1      Support for tags/categories.\r\n           'delete' command\r\n- 2.0.3    Support for other analytics code, via external file\r\n- 2.0.2    Fixed bug when $body_begin_file was empty.\r\n           Added extra line in the footer linking to the github project\r\n- 2.0.1    Allow personalized header/footer files\r\n- 2.0      Added Markdown support.\r\n           Fully support BSD date\r\n- 1.6.4    Fixed bug in localized dates\r\n- 1.6.3    Now supporting BSD date\r\n- 1.6.2    Simplified some functions and variables to avoid duplicated information\r\n- 1.6.1    'date' fix when hours are 1 digit.\r\n- 1.6.0    Disqus comments. External configuration file. Check of 'date' command version.\r\n- 1.5.1    Misc bugfixes and parameter checks\r\n- 1.5      Đurađ Radojičić (djura-san) refactored some code and added flexibility and i18n\r\n- 1.4.2    Now issues are handled at Github\r\n- 1.4.1    Some code refactoring\r\n- 1.4      Using twitter for comments, improved 'rebuild' command\r\n- 1.3      'edit' command\r\n- 1.2.2    Feedburner support\r\n- 1.2.1    Fixed the timestamps bug\r\n- 1.2      'list' command\r\n- 1.1      Draft and preview support\r\n- 1.0      Read http://is.gd/Bkdoru\r\n\r\n\r\nLicense\r\n-------\r\n\r\nThis program is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU General Public License as published by\r\nthe Free Software Foundation, either version 3 of the License, or\r\n(at your option) any later version.\r\n\r\nThis program is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU General Public License for more details.\r\n\r\nYou should have received a copy of the GNU General Public License\r\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}